{"ast":null,"code":"var _jsxFileName = \"/Users/princekumar/Downloads/react1/c3/src/Components/Movie.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Movie = () => {\n  _s();\n\n  const [allBookedMovie, setAllBookedMovie] = React.useState([]);\n  const [currentMovieData, setCurrentMovieData] = React.useState({});\n  const [booked, setBooked] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n  const [seat, setSeat] = React.useState(\"\");\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n\n  const isBooked = (allBookedMovie, id) => {\n    setBooked(false);\n    allBookedMovie.map(e => {\n      if (e.movie_id == id) {\n        setBooked(true);\n      }\n    });\n  }; // const fetchAllBookedMovie=async()=>{\n  //     let res=await fetch(`http://localhost:8080/moviesBooked`);\n  //     let data=await res.json();\n  //     setAllBookedMovie(data)\n  // }\n\n\n  const handler = () => {\n    fetch('http://localhost:8080/moviesBooked', {\n      method: \"POST\",\n      body: JSON.stringify()\n    });\n  };\n\n  const fetchCurrentAndAll = async id => {\n    let res = await fetch(`http://localhost:8080/movies/${id}`);\n    let data = await res.json();\n    setCurrentMovieData(data);\n    let ress = await fetch(`http://localhost:8080/moviesBooked`);\n    let dataa = await ress.json();\n    setAllBookedMovie(dataa);\n  };\n\n  React.useEffect(() => {\n    fetchCurrentAndAll(id);\n    isBooked(allBookedMovie, id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: booked ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/'),\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Seat\",\n        value: seat,\n        onChange: e => setSeat(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handler,\n        children: \"Book Seat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        children: \"Home Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Movie, \"8RRB8zX4Y7YnOGZtRNu4Ve3Oif0=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useParams","useNavigate","Movie","allBookedMovie","setAllBookedMovie","useState","currentMovieData","setCurrentMovieData","booked","setBooked","name","setName","seat","setSeat","id","navigate","isBooked","map","e","movie_id","handler","fetch","method","body","JSON","stringify","fetchCurrentAndAll","res","data","json","ress","dataa","useEffect","target","value"],"sources":["/Users/princekumar/Downloads/react1/c3/src/Components/Movie.jsx"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const Movie = () => {\n    const [allBookedMovie, setAllBookedMovie] = React.useState([]);\n    const [currentMovieData, setCurrentMovieData] = React.useState({})\n    const [booked, setBooked] = React.useState(false)\n    const [name, setName] = React.useState(\"\");\n    const [seat, setSeat] = React.useState(\"\");\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const isBooked = (allBookedMovie, id) => {\n        setBooked(false)\n        allBookedMovie.map((e) => {\n            if (e.movie_id == id) {\n                setBooked(true)\n            }\n        })\n    }\n    // const fetchAllBookedMovie=async()=>{\n    //     let res=await fetch(`http://localhost:8080/moviesBooked`);\n    //     let data=await res.json();\n    //     setAllBookedMovie(data)\n    // }\n    const handler =()=>{\n        fetch('http://localhost:8080/moviesBooked',{\n            method:\"POST\",\n            body:JSON.stringify()\n        })\n    }\n    const fetchCurrentAndAll = async (id) => {\n        let res = await fetch(`http://localhost:8080/movies/${id}`);\n        let data = await res.json();\n        setCurrentMovieData(data)\n        let ress = await fetch(`http://localhost:8080/moviesBooked`);\n        let dataa = await ress.json();\n        setAllBookedMovie(dataa)\n\n    }\n    React.useEffect(() => { fetchCurrentAndAll(id); isBooked(allBookedMovie, id) }, [])\n\n    return (\n        <div>\n            {booked?<button onClick={() => navigate('/')}>Home Page</button>:\n            <><input type='text' placeholder='Name' value={name} onChange={(e) => setName(e.target.value)} />\n            <input type='text' placeholder=\"Seat\" value={seat} onChange={(e) => setSeat(e.target.value)} />\n            <br></br>\n            <button onClick={handler}>Book Seat</button>\n            <button onClick={() => navigate('/')}>Home Page</button></>\n            }\n            \n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}